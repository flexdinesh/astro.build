---
import Layout from './Base.astro'
import { getAuthor } from '../data/authors/index.js'
import Avatar from '../components/Avatar.astro'
import BlogContentImage from '../components/BlogContentImage.astro'
import { CollectionEntry } from 'astro:content'
import { format } from 'date-fns'
import type { Person } from '../types'

type Props = CollectionEntry<'blog'>['data'];

const { title, authors: unparsedAuthors, description, publishDate, coverImage, socialImage } = Astro.props;

const authors = (await Promise.all(unparsedAuthors.map(getAuthor))).filter((author): author is Person => author !== undefined);
---

<Layout {title} {description} pageType="article" image={socialImage}>
    <article class="max-w-screen-md px-4 py-12 sm:py-24 mx-auto">
        {/* Use empty alt text to hide cover image as purely decorative. */}
        {coverImage && <div class="cover-image">
            <BlogContentImage src={coverImage} alt="" aspectRatio="21:9" />
        </div>}
        <h1 class="my-6 text-4xl sm:text-5xl text-neutral-900 font-bold text-center">
            {title}
        </h1>
        <div class="my-4 space-y-2 text-neutral-500 text-lg">
            <p class="flex gap-2 items-center justify-center flex-wrap">
                <time datetime={publishDate.toISOString()}>
                    {format(publishDate, 'MMMM d, yyyy')}
                </time>
				<span>by</span>
                {authors.map(({ name, twitter, image }, i) => {
                    return twitter ? (
                        <a href={twitter} class="no-underline hover:underline inline-flex space-x-1">
                            <Avatar image={image} />
                            <span>{name}</span>
                        </a>
                    ) : (
                        <span class="inline-flex space-x-1">
                            <Avatar image={image} />
                            <span>{name}</span>
                        </span>
                    )
                })}
            </p>
        </div>
        <hr class="my-4" />
        <div class="prose text-lg">
            <slot />
        </div>
    </article>
</Layout>

<style>
    .prose :global(video) {
        @apply rounded-xl shadow-lg my-10;
    }

    .cover-image {
        @apply -mx-4 sm:mx-0;
    }

    .cover-image :global(img), .cover-image :global(picture img) {
        @apply rounded-none sm:rounded-xl bg-neutral-900/90 my-0;
    }

    :global(.language-id) {
        display: none;
    }
</style>
